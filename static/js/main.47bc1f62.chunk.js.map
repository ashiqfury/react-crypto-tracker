{"version":3,"sources":["Coin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","market_cap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","err","console","log","filteredCoins","filter","coin","toLowerCase","includes","type","placeholder","value","onChange","e","target","map","current_price","price_change_percentage_24h","total_volume","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RA4BeA,MA1Bf,YAAgF,IAAhEC,EAA+D,EAA/DA,KAAMC,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,WAChE,OACC,qBAAKC,UAAU,iBAAf,SACC,sBAAKA,UAAU,WAAf,UACC,sBAAKA,UAAU,OAAf,UACC,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,cAAb,SAA4BL,OAE7B,sBAAKK,UAAU,YAAf,UACC,oBAAGA,UAAU,aAAb,gBAA8BJ,KAC9B,oBAAGI,UAAU,cAAb,gBAA+BH,EAAOM,oBACrCL,EAAc,EACd,oBAAGE,UAAU,mBAAb,UAAiCF,EAAYM,QAAQ,GAArD,OAEA,oBAAGJ,UAAU,qBAAb,UAAmCF,EAAYM,QAAQ,GAAvD,OAED,oBAAGJ,UAAU,iBAAb,yBACcD,EAAWI,6B,YCwCfE,MAtDf,WACC,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACTC,IACEC,IACA,4HAEAC,MAAK,SAACC,GAAD,OAASP,EAASO,EAAIC,SAC3BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC3B,IAEH,IAIMG,EAAgBd,EAAMe,QAAO,SAACC,GAAD,OAClCA,EAAK9B,KAAK+B,cAAcC,SAAShB,EAAOe,kBAGzC,OACC,sBAAKxB,UAAU,WAAf,UACC,sBAAKA,UAAU,eAAf,UACC,oBAAIA,UAAU,aAAd,+BACA,+BACC,uBACC0B,KAAK,OACLC,YAAY,SACZ3B,UAAU,sBACV4B,MAAOnB,EACPoB,SAlBgB,SAACC,GACrBpB,EAAUoB,EAAEC,OAAOH,eAsBjBP,EAAcW,KAAI,SAACT,GACnB,OACC,cAAC,EAAD,CAEC9B,KAAM8B,EAAK9B,KACXC,MAAO6B,EAAK7B,MACZC,OAAQ4B,EAAK5B,OACbI,WAAYwB,EAAKxB,WACjBH,MAAO2B,EAAKU,cACZnC,YAAayB,EAAKW,4BAClBrC,OAAQ0B,EAAKY,cAPRZ,EAAKa,YCjCDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.47bc1f62.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Coin({ name, image, symbol, price, volume, priceChange, market_cap }) {\r\n\treturn (\r\n\t\t<div className=\"coin-container\">\r\n\t\t\t<div className=\"coin-row\">\r\n\t\t\t\t<div className=\"coin\">\r\n\t\t\t\t\t<img src={image} alt=\"Crypto\" />\r\n\t\t\t\t\t<h1>{name}</h1>\r\n\t\t\t\t\t<p className=\"coin-symbol\">{symbol}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"coin-data\">\r\n\t\t\t\t\t<p className=\"coin-price\">Rs.{price}</p>\r\n\t\t\t\t\t<p className=\"coin-volume\">Rs.{volume.toLocaleString()}</p>\r\n\t\t\t\t\t{priceChange < 0 ? (\r\n\t\t\t\t\t\t<p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<p className=\"coin-marketcap\">\r\n\t\t\t\t\t\tMkt Cap: Rs.{market_cap.toLocaleString()}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Coin;\r\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Coin from './Coin';\nimport './coin.css';\nimport './App.css';\n\nfunction App() {\n\tconst [coins, setCoins] = useState([]);\n\tconst [search, setSearch] = useState('');\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\n\t\t\t\t'https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false'\n\t\t\t)\n\t\t\t.then((res) => setCoins(res.data))\n\t\t\t.catch((err) => console.log(err));\n\t}, []);\n\n\tconst handleChange = (e) => {\n\t\tsetSearch(e.target.value);\n\t};\n\n\tconst filteredCoins = coins.filter((coin) =>\n\t\tcoin.name.toLowerCase().includes(search.toLowerCase())\n\t);\n\n\treturn (\n\t\t<div className=\"coin-app\">\n\t\t\t<div className=\"coin__search\">\n\t\t\t\t<h1 className=\"coin--text\">Search a currency</h1>\n\t\t\t\t<form>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\tclassName=\"coin__search--input\"\n\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t{filteredCoins.map((coin) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Coin\n\t\t\t\t\t\tkey={coin.key}\n\t\t\t\t\t\tname={coin.name}\n\t\t\t\t\t\timage={coin.image}\n\t\t\t\t\t\tsymbol={coin.symbol}\n\t\t\t\t\t\tmarket_cap={coin.market_cap}\n\t\t\t\t\t\tprice={coin.current_price}\n\t\t\t\t\t\tpriceChange={coin.price_change_percentage_24h}\n\t\t\t\t\t\tvolume={coin.total_volume}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}